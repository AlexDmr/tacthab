----- Dynamique des programmes
Démarrer et arréter un programme.


----- Evènements d'apparition/dispariation des bricks
Emettre des évènements lors de l'appaiation et de la dispariation des briques
Permettre de s'y abonner dans les programmes
	ex : lorsqu'apparait Kodi alors lui envoyer un média qui dit bonjour...
	     lorsqu'un mediaPlayer apparait alors charger et lire un media qui dit bonjour...
		 => Selecteur => introduit nouvelle variable dans le contexte
		    WHEN un new media (call it XXX)

	
----- Intégration des services google Map et Tag
Tag pour localiser des arrêts et connaitre les prochains passages
Google Map pour visualiser cela plus visualiser la position d'un téléphone par exemple.
Eventuellement, google map pour calculer des itinéraires en transport en commun ?


----- Coder une gestion des états
Savoir si on est ou pas dans un état.
	Maintenir un état lié.
	Modéliser les états atomiques et les lier aux actions et évènements correspondant d'E/S.
Evènement lorsqu'on entre dans l'état E1
		  lorsqu'on sort de l'état E1



----- Equipements "virtuels", ou plutôt à façons, bricolés, ...
Permettre de définir ses propres capteurs avec :
	- des évènements	: faire le pont avec un évènement extérieur
						  par exemple, si on reçoit tel requête HTTP alors lever tel évènement
						  pour l'appareil.
	- des états			: Un état est définit par un évènement d'entrée un évènement de sortie.
						  On peut ensuite utiliser l'état (je rentre dans l'état, j'en sort, j'y suis ou pas...
	- des actions		: faire le pont avec des actions extérieurs.
						  Possibilité de lier un évènement à l'action ainsi définit.
	- un programme ???	: Dans ce cas le programme permet de définir des "variables"
						  pour modéliser les évènements, les états et les actions...

Est-ce pertinent de définir seulement des objets/équipement ou bien aussi des classes?
Est-ce en rapport avec des programmes paramétriques ? (les paramètres permettant alors de distinguer les objets ?)
